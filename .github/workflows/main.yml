name: Build, Deploy and Generate Website

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Fetch tags for versioning
      - name: Fetch tags
        run: git fetch --tags

      # Determine the new version number
      - name: Increment version
        id: version
        uses: paulhatch/semantic-version@v4
        with:
          major_pattern: '^MAJOR:'
          minor_pattern: '^MINOR:'
          patch_pattern: '^PATCH:'
          default_bump: patch
          tag_prefix: 'v'

      # Set up Java
      - name: Set up JDK 23.0.1
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23.0.1'

      # Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Install dependencies and build the project
      - name: Build with Maven
        run: mvn clean package

      # Create the executables folder and move the JAR file
      - name: Move JAR to executables folder
        run: |
          mkdir -p executables
          mv target/*.jar executables/

      # Upload artifacts for sharing between jobs
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: jar-files
          path: executables/

      # Output the generated version for use in downstream jobs
      - name: Output version
        run: echo "version=${{ steps.version.outputs.version }}" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Download the build artifacts
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: jar-files

      # Generate a webpage for downloading the JAR file
      - name: Generate Download Page
        run: |
          mkdir -p download-page
          echo "<html>" > download-page/index.html
          echo "<head><title>Download JavaFX Application</title></head>" >> download-page/index.html
          echo "<body>" >> download-page/index.html
          echo "<h1>JavaFX Application</h1>" >> download-page/index.html
          echo "<p>Download the latest version of the JavaFX application:</p>" >> download-page/index.html
          echo "<a href='https://github.com/${{ github.repository }}/releases/download/${{ needs.build.outputs.version }}/$(ls executables)'>Download JAR</a>" >> download-page/index.html
          echo "</body>" >> download-page/index.html
          echo "</html>" >> download-page/index.html

      # Deploy the webpage to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: download-page